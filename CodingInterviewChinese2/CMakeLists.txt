cmake_minimum_required(VERSION 3.16)
project(CodingInterviewChinese2)

set(CMAKE_CXX_STANDARD 11)

set(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)
set(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)

add_library(base base/Array.cpp base/BinaryTree.cpp 08_GetNextBinaryTreeNode/BinaryTreeEx.cc base/List.cpp base/StringUtil.cpp base/Tree.cpp)
include_directories(${PROJECT_SOURCE_DIR})

add_executable(01_AssignmentOperator 01_AssignmentOperator/main.cc)
add_executable(03_01_FindRepeatNumber 03_01_FindRepeatNumber/main.cc)
add_executable(03_02_FindRepeatNumber 03_02_FindRepeatNumber/main.cc)
add_executable(04_FindNumberIn2DArray 04_FindNumberIn2DArray/main.cc)
add_executable(05_replaceSpaces 05_replaceSpaces/main.cc)
add_executable(06_ReversePrint 06_ReversePrint/main.cc)
target_link_libraries(06_ReversePrint base)
add_executable(07_BuildBinaryTree 07_BuildBinaryTree/main.cc)
target_link_libraries(07_BuildBinaryTree base)
add_executable(08_GetNextBinaryTreeNode 08_GetNextBinaryTreeNode/main.cc 08_GetNextBinaryTreeNode/BinaryTreeEx.cc)
target_link_libraries(08_GetNextBinaryTreeNode base)
add_executable(09_QueueWithTwoStacks 09_QueueWithTwoStacks/main.cc)
add_executable(10_01_Fibonacci 10_01_Fibonacci/main.cc)
add_executable(10_02_ClimbStairs 10_02_ClimbStairs/main.cc)
add_executable(11_FindMin 11_FindMin/main.cc)
add_executable(12_WordSearch 12_WordSearch/main.cc)
add_executable(13_MovingCount 13_MovingCount/main.cc)
add_executable(14_IntegerBreak 14_IntegerBreak/main.cc)
add_executable(15_NumberOf1Bits 15_NumberOf1Bits/main.cc)
add_executable(16_MyPow 16_MyPow/main.cc)
add_executable(18_01_DeleteNode 18_01_DeleteNode/main.cc)
target_link_libraries(18_01_DeleteNode base)
add_executable(18_02_DeleteDuplication 18_02_DeleteDuplication/main.cc)
target_link_libraries(18_02_DeleteDuplication base)
add_executable(21_Exchange 21_Exchange/main.cc)
add_executable(22_GetKthFromEnd 22_GetKthFromEnd/main.cc)
target_link_libraries(22_GetKthFromEnd base)
add_executable(23_EntryNodeOfLoop 23_EntryNodeOfLoop/main.cc)
target_link_libraries(23_EntryNodeOfLoop base)
add_executable(24_ReverseList 24_ReverseList/main.cc)
target_link_libraries(24_ReverseList base)
add_executable(25_MergeTwoLists 25_MergeTwoLists/main.cc)
target_link_libraries(25_MergeTwoLists base)
add_executable(26_IsSubstructure 26_IsSubstructure/main.cc)
target_link_libraries(26_IsSubstructure base)
add_executable(27_MirrorBinaryTree 27_MirrorBinaryTree/main.cc)
target_link_libraries(27_MirrorBinaryTree base)
add_executable(28_SymmetricBinaryTree 28_SymmetricBinaryTree/main.cc)
target_link_libraries(28_SymmetricBinaryTree base)
add_executable(29_SpiralOrder 29_SpiralOrder/main.cc)
add_executable(30_MinStack 30_MinStack/main.cc)
add_executable(31_ValidateStackSequences 31_ValidateStackSequences/main.cc)
add_executable(32_01_PrintTreeFromTopToBottom 32_01_PrintTreeFromTopToBottom/main.cc)
target_link_libraries(32_01_PrintTreeFromTopToBottom base)
add_executable(32_02_PrintTreeInLine 32_02_PrintTreeInLine/main.cc)
target_link_libraries(32_02_PrintTreeInLine base)
add_executable(32_03_PrintTreeInZigZag 32_03_PrintTreeInZigZag/main.cc)
target_link_libraries(32_03_PrintTreeInZigZag base)
add_executable(33_VerifyPostorder 33_VerifyPostorder/main.cc)
target_link_libraries(33_VerifyPostorder base)
add_executable(34_PathSum 34_PathSum/main.cc)
target_link_libraries(34_PathSum base)
add_executable(35_CopyRandomList 35_CopyRandomList/main.cc)
target_link_libraries(35_CopyRandomList base)
add_executable(36_TreeToDoublyList 36_TreeToDoublyList/main.cc)
target_link_libraries(36_TreeToDoublyList base)
add_executable(37_SerializeBinaryTree 37_SerializeBinaryTree/main.cc)
target_link_libraries(37_SerializeBinaryTree base)
add_executable(38_Permutation 38_Permutation/main.cc)
add_executable(39_MajorityElement 39_MajorityElement/main.cc)
add_executable(40_GetLeastNumbers 40_GetLeastNumbers/main.cc)
add_executable(41_MedianFinder 41_MedianFinder/main.cc)
add_executable(42_MaxSubArray 42_MaxSubArray/main.cc)
add_executable(43_CountDigitOne 43_CountDigitOne/main.cc)
add_executable(44_FindNthDigit 44_FindNthDigit/main.cc)
add_executable(45_minNumber 45_minNumber/main.cc)
add_executable(47_MaxValueOfGifts 47_MaxValueOfGifts/main.cc)
add_executable(48_LengthOfLongestSubstring 48_LengthOfLongestSubstring/main.cc)
add_executable(50_01_FirstUniqChar 50_01_FirstUniqChar/main.cc)
add_executable(50_02_FirstCharacterInStream 50_02_FirstCharacterInStream/main.cc)
add_executable(52_GetIntersectionNode 52_GetIntersectionNode/main.cc)
target_link_libraries(52_GetIntersectionNode base)
add_executable(53_01_SearchRange 53_01_SearchRange/main.cc)
add_executable(53_02_MissingNumber 53_02_MissingNumber/main.cc)
add_executable(53_03_NumbeEqualToIndex 53_03_NumbeEqualToIndex/main.cc)
add_executable(54_KthLargest 54_KthLargest/main.cc)
target_link_libraries(54_KthLargest base)
add_executable(55_01_MaxDepth 55_01_MaxDepth/main.cc)
target_link_libraries(55_01_MaxDepth base)
add_executable(55_02_IsBalanced 55_02_IsBalanced/main.cc)
target_link_libraries(55_02_IsBalanced base)
add_executable(56_01_SingleNumbers 56_01_SingleNumbers/main.cc)
add_executable(56_02_SingleNumber 56_02_SingleNumber/main.cc)
add_executable(57_01_TwoSum 57_01_TwoSum/main.cc)
add_executable(57_02_FindContinuousSequence 57_02_FindContinuousSequence/main.cc)
add_executable(58_01_ReverseWords 58_01_ReverseWords/main.cc)
target_link_libraries(58_01_ReverseWords base)
add_executable(58_02_ReverseLeftWords 58_02_ReverseLeftWords/main.cc)
target_link_libraries(58_02_ReverseLeftWords base)
add_executable(59_01_MaxSlidingWindow 59_01_MaxSlidingWindow/main.cc)
add_executable(59_02_MaxQueue 59_02_MaxQueue/main.cc)
add_executable(60_TwoSum 60_TwoSum/main.cc)
add_executable(61_IsStraight 61_IsStraight/main.cc)
add_executable(62_LastRemaining 62_LastRemaining/main.cc)
add_executable(63_MaxProfit 63_MaxProfit/main.cc)
add_executable(64_SumNums 64_SumNums/main.cc)
add_executable(65_Add 65_Add/main.cc)
add_executable(66_ConstructArr 66_ConstructArr/main.cc)
add_executable(67_MyAtoi 67_MyAtoi/main.cc)
add_executable(68_01_LowestCommonAncestor 68_01_LowestCommonAncestor/main.cc)
target_link_libraries(68_01_LowestCommonAncestor base)
add_executable(68_02_LowestCommonAncestor 68_02_LowestCommonAncestor/main.cc)
target_link_libraries(68_02_LowestCommonAncestor base)
